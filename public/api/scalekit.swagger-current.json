{
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "schemes": ["https"],
  "swagger": "2.0",
  "info": {
    "description": "# Introduction\n\nThe Scalekit API is a RESTful API that enables you to manage organizations, users, and authentication settings. All requests must use HTTPS.\n\n# Base URL\n\nAll API requests use the following base URLs:\n\n```\nhttps://{environment}.scalekit.dev (Development)\nhttps://{environment}.scalekit.com (Production)\nhttps://auth.example.com (Custom domain)\n```\n\nScalekit operates two separate environments: Development and Production. Resources cannot be moved between environments.\n\n# Authentication\n\nThe Scalekit API uses OAuth 2.0 Client Credentials for authentication.\n\nGetting an access token\n\n1. Get your credentials from the [Scalekit Dashboard](https://app.scalekit.com):\n\n   - environment\n   - client_id\n   - client_secret\n\n2. Request an access token:\n\n```shell\ncurl https://{SCALEKIT_ENVIRONMENT_URL}/oauth/token \\\n  -X POST \\\n  -H 'Content-Type: application/x-www-form-urlencoded' \\\n  -d 'client_id={client_id}' \\\n  -d 'client_secret={client_secret}' \\\n  -d 'grant_type=client_credentials'\n```\n\n3. Use the access token in API requests:\n\n```shell\ncurl https://{SCALEKIT_ENVIRONMENT_URL}/api/v1/organizations \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: Bearer {access_token}'\n```\n\nThe response includes an access token:\n\n```json\n{\n\t\"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6InNua181Ok4OTEyMjU2NiIsInR5cCI6IkpXVCJ9...\",\n\t\"token_type\": \"Bearer\",\n\t\"expires_in\": 86399,\n\t\"scope\": \"openid\"\n}\n```\n\n# Response Codes\n\nThe API uses standard HTTP status codes:\n\n| Code        | Description          |\n| ----------- | -------------------- |\n| 200/201     | Success              |\n| 400         | Invalid request      |\n| 401         | Authentication error |\n| 404         | Resource not found   |\n| 429         | Rate limit exceeded  |\n| 500/501/504 | Server error         |\n\nError responses include detailed information:\n\n```json\n{\n\t\"code\": 16,\n\t\"message\": \"Token empty\",\n\t\"details\": [\n\t\t{\n\t\t\t\"@type\": \"type.googleapis.com/scalekit.v1.errdetails.ErrorInfo\",\n\t\t\t\"error_code\": \"UNAUTHENTICATED\"\n\t\t}\n\t]\n}\n```\n",
    "title": "Scalekit APIs",
    "contact": {
      "name": "Scalekit Inc",
      "url": "https://scalekit.com",
      "email": "support@scalekit.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.0.0"
  },
  "host": "$SCALEKIT_ENVIRONMENT_URL",
  "paths": {
    "/api/v1/connections": {
      "get": {
        "description": "Retrieves a list of connections in the environment",
        "tags": ["Connections"],
        "summary": "List Connections",
        "operationId": "ConnectionService_ListConnections",
        "parameters": [
          {
            "type": "string",
            "description": "Filter connections by organization identifier",
            "name": "organization_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter connections by email domain associated with the organization",
            "name": "domain",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Comma-separated list of additional fields to include in the response",
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved connections",
            "schema": {
              "$ref": "#/definitions/connectionsListConnectionsResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "const connections = await sc.connection.listConnections(organizationId);"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "connections = sc.connection.list_connections(\n  organization_id\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "connections, err := sc.Connection.ListConnections(\n  ctx,\n  organizationId\n)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "ListConnectionsResponse response = scalekitClient.connections().listConnectionsByOrganization(organizationId);"
          }
        ]
      }
    },
    "/api/v1/organizations": {
      "get": {
        "description": "Retrieve a paginated list of organizations within your environment. The response includes a `page_token` that can be used to access subsequent pages of results.",
        "tags": ["Organizations"],
        "summary": "List Organizations",
        "externalDocs": {
          "description": "Learn more about organization listing",
          "url": "https://docs.scalekit.com/"
        },
        "operationId": "OrganizationService_ListOrganization",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of organizations to return per page. Must be between 10 and 100",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Pagination token from the previous response. Use to retrieve the next page of organizations",
            "name": "page_token",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Your application's unique identifier for this organization, used to link Scalekit with your system",
            "name": "external_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of organizations",
            "schema": {
              "$ref": "#/definitions/organizationsListOrganizationsResponse"
            }
          },
          "400": {
            "description": "Invalid page token",
            "schema": {}
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "const organizations = await scalekit.organization.listOrganization({\n  pageSize: 10,\n});"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "options = ListOrganizationOptions()\noptions.page_size = 10\n\norganizations = sc.organization.list_organizations(\n  options=options\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "organizations, err := sc.Organization.ListOrganizations(\n  ctx,\n  \u0026scalekit.ListOrganizationOptions{\n    PageSize: 10,\n  }\n)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "ListOrganizationsResponse organizations = scalekitClient.organizations().listOrganizations(10, \"\");"
          }
        ]
      },
      "post": {
        "description": "Creates a new organization in your environment. Use this endpoint to add a new tenant that can be configured with various settings and metadata",
        "tags": ["Organizations"],
        "summary": "Create an Organization",
        "operationId": "OrganizationService_CreateOrganization",
        "parameters": [
          {
            "description": "Organization details",
            "name": "organization",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Required parameters for creating a new organization",
              "$ref": "#/definitions/v1organizationsCreateOrganization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the newly created organization with its unique identifier and settings",
            "schema": {
              "$ref": "#/definitions/organizationsCreateOrganizationResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "const organization = await sc.organization.createOrganization(name, {\n  externalId: 'externalId',\n});"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "options = CreateOrganizationOptions()\noptions.external_id = \"externalId\"\norganization = sc.organization.create_organization(\n  name,\n  options=options\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "organization, err := sc.Organization.CreateOrganization(\n  ctx,\n  name,\n  scalekit.CreateOrganizationOptions{\n    ExternalID: \"externalId\",\n  },\n)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "CreateOrganization createOrganization = CreateOrganization.newBuilder().setDisplayName(\"Test Org\").build();\n\nOrganization createdOrganization = scalekitClient.organizations().create(createOrganization);"
          }
        ]
      }
    },
    "/api/v1/organizations/{id}": {
      "get": {
        "description": "Retrieves organization details by Scalekit ID, including name, region, metadata, and settings",
        "tags": ["Organizations"],
        "summary": "Get Organization details",
        "operationId": "OrganizationService_GetOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "Unique scalekit-generated identifier that uniquely references an organization",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the complete organization object with ID, display name, settings, and metadata",
            "schema": {
              "$ref": "#/definitions/organizationsGetOrganizationResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "const sc = new ScalekitClient(\n  \u003cSCALEKIT_ENVIRONMENT_URL\u003e,\n  \u003cSCALEKIT_CLIENT_ID\u003e,\n  \u003cSCALEKIT_CLIENT_SECRET\u003e\n);\n\nconst organization = await sc.organization.getOrganization(organization_id);"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "sc = ScalekitClient(\n  \u003cSCALEKIT_ENVIRONMENT_URL\u003e,\n  \u003cSCALEKIT_CLIENT_ID\u003e,\n  \u003cSCALEKIT_CLIENT_SECRET\u003e\n)\n\norganization = sc.organization.get_organization(\n  organization_id\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "sc := scalekit.NewScalekitClient(\n  \u003cSCALEKIT_ENVIRONMENT_URL\u003e,\n  \u003cSCALEKIT_CLIENT_ID\u003e,\n  \u003cSCALEKIT_CLIENT_SECRET\u003e\n)\n\norganization, err := sc.Organization.GetOrganization(\n  ctx,\n  organizationId\n)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "ScalekitClient scalekitClient = new ScalekitClient(\n  \"\u003cSCALEKIT_ENVIRONMENT_URL\u003e\",\n  \"\u003cSCALEKIT_CLIENT_ID\u003e\",\n  \"\u003cSCALEKIT_CLIENT_SECRET\u003e\"\n);\n\nOrganization organization = scalekitClient.organizations().getById(organizationId);"
          }
        ]
      },
      "delete": {
        "description": "Remove an existing organization from the environment using its unique identifier",
        "tags": ["Organizations"],
        "summary": "Delete an Organization",
        "operationId": "OrganizationService_DeleteOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "Unique scalekit-generated identifier that uniquely references an organization",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Organization successfully deleted and no longer accessible",
            "schema": {}
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "await sc.organization.deleteOrganization(organizationId);"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "sc.organization.delete_organization(organization_id)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "err := sc.Organization.DeleteOrganization(\n  ctx,\n  organizationId\n)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "ScalekitClient scalekitClient = new ScalekitClient(\n  \"\u003cSCALEKIT_ENVIRONMENT_URL\u003e\",\n  \"\u003cSCALEKIT_CLIENT_ID\u003e\",\n  \"\u003cSCALEKIT_CLIENT_SECRET\u003e\"\n);\n\nscalekitClient.organizations().deleteById(organizationId);"
          }
        ]
      },
      "patch": {
        "description": "Updates an organization's display name, external ID, or metadata. Requires a valid organization identifier. Region code cannot be modified through this endpoint.",
        "tags": ["Organizations"],
        "summary": "Update Organization details",
        "operationId": "OrganizationService_UpdateOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization to be updated",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "organization",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Organization Parameters to be updated",
              "$ref": "#/definitions/v1organizationsUpdateOrganization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated organization with all current details reflected in the response.",
            "schema": {
              "$ref": "#/definitions/organizationsUpdateOrganizationResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "const organization = await sc.organization.updateOrganization(organization_id, {\n  displayName: 'displayName',\n  externalId: 'externalId',\n});"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "organization = sc.organization.update_organization(organization_id, {\n  display_name: \"display_name\",\n  external_id: \"external_id\"\n})"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "organization, err := sc.Organization.UpdateOrganization(\n  ctx,\n  organizationId,\n  \u0026scalekit.UpdateOrganization{\n    DisplayName: \"displayName\",\n    ExternalId: \"externalId\",\n  },\n)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "UpdateOrganization updateOrganization = UpdateOrganization.newBuilder()\n  .setDisplayName(\"Updated Organization Name\")\n  .build();\n\nOrganization updatedOrganizationById = scalekitClient.organizations().updateById(organizationId, updateOrganization);"
          }
        ]
      }
    },
    "/api/v1/organizations/{id}/portal_links": {
      "put": {
        "description": "Creates a time-limited Admin Portal URL for IT administrators to configure and manage Single Sign-On (SSO) connections within their organization. Generated links expire after 7 days (168 hours).",
        "tags": ["Organizations"],
        "summary": "Generate Admin Portal Link",
        "operationId": "OrganizationService_GeneratePortalLink",
        "parameters": [
          {
            "type": "string",
            "description": "Organization ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "enum": ["dir_sync", "sso"],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Features to enable in the admin portal link. To enable features, append them as URL parameters:\n\n- Single Sign-On: ?features=sso\n- Directory Sync: ?features=dir_sync\n- Both features: ?features=sso\u0026features=dir_sync\n\nExample URL: https://scalekit.com/portal/lnk_123?features=sso\n\n - dir_sync: dir_sync enables directory synchronization configuration in the portal\n - sso: sso enables Single Sign-On (SSO) configuration in the portal",
            "name": "features",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Admin Portal link generated successfully. Returns the portal URL and expiration timestamp.",
            "schema": {
              "$ref": "#/definitions/organizationsGeneratePortalLinkResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "const link = await sc.organization.generatePortalLink(organization_id);"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "link = sc.organization.generate_portal_link(\n  organization_id\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "link, err := sc.Organization.GeneratePortalLink(\n  ctx,\n  organizationId\n)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "Link portalLink = client\n  .organizations()\n  .generatePortalLink(organizationId, Arrays.asList(Feature.sso, Feature.dir_sync));"
          }
        ]
      }
    },
    "/api/v1/organizations/{id}/settings": {
      "patch": {
        "description": "Updates configuration settings for an organization. Supports modifying SSO configuration, directory synchronization settings, and session parameters. Requires organization ID and the specific settings to update.",
        "tags": ["Organizations"],
        "summary": "Toggle Organization settings",
        "operationId": "OrganizationService_UpdateOrganizationSettings",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization to update settings. Must begin with 'org_' prefix",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "settings",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Settings configuration to apply to the organization. Contains feature toggles for SSO, directory synchronization, and other organization capabilities",
              "$ref": "#/definitions/organizationsOrganizationSettings",
              "example": {
                "features": [
                  {
                    "enabled": true,
                    "name": "sso"
                  },
                  {
                    "enabled": false,
                    "name": "directory_sync"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the complete organization object with updated settings applied. Contains all organization details including ID, display name, and the modified settings.",
            "schema": {
              "$ref": "#/definitions/organizationsGetOrganizationResponse"
            }
          },
          "400": {
            "description": "Invalid request - occurs when the settings payload contains invalid values or unsupported configuration",
            "schema": {}
          },
          "404": {
            "description": "Organization not found - the specified organization ID doesn't exist",
            "schema": {}
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "const settings = {\n  features: [\n    {\n      name: 'sso',\n      enabled: true,\n    },\n    {\n      name: 'dir_sync',\n      enabled: true,\n    },\n  ],\n};\n\nawait sc.organization.updateOrganizationSettings('\u003corganization_id\u003e', settings);"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "settings = [\n        {\n            \"name\": \"sso\",\n            \"enabled\": true\n        },\n        {\n            \"name\": \"dir_sync\",\n            \"enabled\": true\n        }\n    ]\n\nsc.organization.update_organization_settings(\n  organization_id='\u003corganization_id\u003e', settings=settings\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "settings := OrganizationSettings{\n\t\tFeatures: []Feature{\n\t\t\t{\n\t\t\t\tName:    \"sso\",\n\t\t\t\tEnabled: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tName:    \"dir_sync\",\n\t\t\t\tEnabled: true,\n\t\t\t},\n\t\t},\n\t}\n\norganization,err := sc.Organization().UpdateOrganizationSettings(ctx, organizationId, settings)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "OrganizationSettingsFeature featureSSO = OrganizationSettingsFeature.newBuilder()\n                .setName(\"sso\")\n                .setEnabled(true)\n                .build();\n\nOrganizationSettingsFeature featureDirectorySync = OrganizationSettingsFeature.newBuilder()\n                .setName(\"dir_sync\")\n                .setEnabled(true)\n                .build();\n\nupdatedOrganization = scalekitClient.organizations()\n                .updateOrganizationSettings(organization.getId(), List.of(featureSSO, featureDirectorySync));"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/connections/{id}": {
      "get": {
        "description": "Retrieves the complete configuration and status details for a specific connection by its ID within an organization. Returns all connection properties including provider settings, protocols, and current status.",
        "tags": ["Connections"],
        "summary": "Get Connection details",
        "operationId": "ConnectionService_GetConnection",
        "parameters": [
          {
            "type": "string",
            "description": "Organization identifier (required). Specifies which organization owns the connection you want to retrieve.",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Connection identifier (required). Specifies which specific connection to retrieve from the organization.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved connection details for the specified organization",
            "schema": {
              "$ref": "#/definitions/connectionsGetConnectionResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "const connection = await sc.connection.getConnection(\n  organizationId,\n  connectionId\n);"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "connection = sc.connection.get_connection(\n  organization_id,\n  connection_id,\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "connection, err := sc.Connection.GetConnection(\n  ctx,\n  organizationId,\n  connectionId,\n)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "Connection connection = client.connections().getConnectionById(connectionId, organizationId);"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/connections/{id}:disable": {
      "patch": {
        "description": "Deactivate an existing connection for the specified organization. When disabled, users cannot authenticate using this connection. This endpoint changes the connection state from enabled to disabled without modifying other configuration settings",
        "tags": ["Connections"],
        "summary": "Disable Organization Connection",
        "operationId": "ConnectionService_DisableConnection",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization associated with the connection",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier for the connection to be toggled",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Connection disabled successfully",
            "schema": {
              "$ref": "#/definitions/connectionsToggleConnectionResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "await sc.connection.disableConnection(organizationId, connectionId);"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "sc.connection.disable_connection(\n  organization_id,\n  connection_id\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "err := sc.Connection.DisableConnection(\n  ctx,\n  organizationId,\n  connectionId,\n)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "ToggleConnectionResponse response = scalekitClient.connections().disableConnection(connectionId, organizationId);"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/connections/{id}:enable": {
      "patch": {
        "description": "Activate an existing connection for the specified organization. When enabled, users can authenticate using this connection. This endpoint changes the connection state from disabled to enabled without modifying other configuration settings",
        "tags": ["Connections"],
        "summary": "Enable Organization Connection",
        "operationId": "ConnectionService_EnableConnection",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization associated with the connection",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier for the connection to be toggled",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Connection enabled successfully",
            "schema": {
              "$ref": "#/definitions/connectionsToggleConnectionResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "await sc.connection.enableConnection(organizationId, connectionId);"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "sc.connection.enable_connection(\n  organization_id,\n  connection_id,\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "err := sc.Connection.EnableConnection(\n  ctx,\n  organizationId,\n  connectionId,\n)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "ToggleConnectionResponse response = scalekitClient.connections().enableConnection(connectionId, organizationId);"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/directories": {
      "get": {
        "tags": ["Directory"],
        "summary": "List Organization Directories",
        "operationId": "DirectoryService_ListDirectories",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of directories for the organization",
            "schema": {
              "$ref": "#/definitions/directoriesListDirectoriesResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "await scalekit.directory.listDirectories('\u003corganization_id\u003e');"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "directories_list = sc.directory.list_directories(\n\torganization_id='\u003corganization_id\u003e'\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "directories,err := sc.Directory().ListDirectories(ctx, organizationId)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "ListDirectoriesResponse response = scalekitClient.directories().listDirectories(organizationId);"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{directory_id}/groups": {
      "get": {
        "description": "Retrieves all groups from a specified directory. Use this endpoint to view group structures from your connected identity provider.",
        "tags": ["Directory"],
        "summary": "List Directory Groups",
        "operationId": "DirectoryService_ListDirectoryGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the directory",
            "name": "directory_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Number of groups to return per page. Maximum value is 30. If not specified, defaults to 10",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Token for pagination. Use the value returned in the 'next_page_token' field of the previous response",
            "name": "page_token",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Filter groups updated after this timestamp. Use ISO 8601 format",
            "name": "updated_after",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, includes full group details. If false or not specified, returns basic information only",
            "name": "include_detail",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, returns group and its details from external provider (default: false)",
            "name": "include_external_groups",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of groups from the specified directory",
            "schema": {
              "$ref": "#/definitions/directoriesListDirectoryGroupsResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "const { groups } = await scalekit.directory.listDirectoryGroups(\n  '\u003corganization_id\u003e',\n  '\u003cdirectory_id\u003e'\n);"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "directory_groups = sc.directory.list_directory_groups(\n  directory_id='\u003cdirectory_id\u003e', organization_id='\u003corganization_id\u003e'\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "options := \u0026ListDirectoryGroupsOptions{\n\t\tPageSize: 10,\n\t\tPageToken:\"\",\n\t}\n\ndirectoryGroups, err := sc.Directory().ListDirectoryGroups(ctx, organizationId, directoryId, options)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "var options = ListDirectoryResourceOptions.builder()\n  .pageSize(10)\n  .pageToken(\"\")\n  .includeDetail(true)\n  .build();\n\nListDirectoryGroupsResponse groupsResponse = scalekitClient\n  .directories()\n  .listDirectoryGroups(directory.getId(), organizationId, options);"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{directory_id}/users": {
      "get": {
        "description": "Retrieves a list of all users within a specified directory for an organization. This endpoint allows you to view user accounts associated with your connected Directory Providers.",
        "tags": ["Directory"],
        "summary": "List Directory Users",
        "operationId": "DirectoryService_ListDirectoryUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the directory within the organization",
            "name": "directory_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Number of users to return per page. Maximum value is 30. If not specified, defaults to 10",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Token for pagination. Use the value returned in the 'next_page_token' field of the previous response to retrieve the next page of results",
            "name": "page_token",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If set to true, the response will include the full user payload with all available details. If false or not specified, only essential user information will be returned",
            "name": "include_detail",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter users by their membership in a specific directory group",
            "name": "directory_group_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Filter users that were updated after the specified timestamp. Use ISO 8601 format",
            "name": "updated_after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of users from the specified directory",
            "schema": {
              "$ref": "#/definitions/directoriesListDirectoryUsersResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "const { users } = await scalekit.directory.listDirectoryUsers(\n  '\u003corganization_id\u003e',\n  '\u003cdirectory_id\u003e'\n);"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "directory_users = sc.directory.list_directory_users(\n  directory_id='\u003cdirectory_id\u003e', organization_id='\u003corganization_id\u003e'\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "options := \u0026ListDirectoryUsersOptions{\n\t\tPageSize: 10,\n\t\tPageToken: \"\",\n\t}\ndirectoryUsers,err := sc.Directory().ListDirectoryUsers(ctx, organizationId, directoryId, options)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "var options = ListDirectoryResourceOptions.builder()\n  .pageSize(10)\n  .pageToken(\"\")\n  .includeDetail(true)\n  .build();\n\nListDirectoryUsersResponse usersResponse = scalekitClient\n  .directories()\n  .listDirectoryUsers(directory.getId(), organizationId, options);"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{id}": {
      "get": {
        "description": "Retrieves detailed information about a specific directory within an organization",
        "tags": ["Directory"],
        "summary": "Get Directory details",
        "operationId": "DirectoryService_GetDirectory",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the directory",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved directory details",
            "schema": {
              "$ref": "#/definitions/directoriesGetDirectoryResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "const { directory } = await scalekit.directory.getDirectory(\n  organizationId,\n  directoryId\n);"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "directory = sc.directory.get_directory(\n  directory_id='\u003cdirectory_id\u003e', organization_id='\u003corganization_id\u003e'\n)\nprint(f'Directory details: {directory}')"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "directory, err := sc.Directory().GetDirectory(ctx, organizationId, directoryId)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "Directory directory = scalekitClient.directories().getDirectory(directoryId, organizationId);"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{id}:disable": {
      "patch": {
        "description": "Stops synchronization of users and groups from a specified directory within an organization. This operation prevents further updates from the connected Directory provider",
        "tags": ["Directory"],
        "summary": "Disable a Directory",
        "operationId": "DirectoryService_DisableDirectory",
        "parameters": [
          {
            "type": "string",
            "description": "A unique identifier for the organization. The value must begin with 'org_' and be between 1 and 32 characters long",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifier for a directory within the organization. The value must begin with 'dir_' and be between 1 and 32 characters long",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled the directory",
            "schema": {
              "$ref": "#/definitions/directoriesToggleDirectoryResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "await scalekit.directory.disableDirectory(\n  '\u003corganization_id\u003e',\n  '\u003cdirectory_id\u003e'\n);"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "directory_response = sc.directory.disable_directory(\n  directory_id='\u003cdirectory_id\u003e', organization_id='\u003corganization_id\u003e'\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "disable,err := sc.Directory().DisableDirectory(ctx, organizationId, directoryId)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "ToggleDirectoryResponse disableResponse = scalekitClient\n  .directories()\n  .disableDirectory(directoryId, organizationId);"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{id}:enable": {
      "patch": {
        "description": "Activates a directory within an organization, allowing it to synchronize users and groups with the connected Directory provider",
        "tags": ["Directory"],
        "summary": "Enable a Directory",
        "operationId": "DirectoryService_EnableDirectory",
        "parameters": [
          {
            "type": "string",
            "description": "A unique identifier for the organization. The value must begin with 'org_' and be between 1 and 32 characters long",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifier for a directory within the organization. The value must begin with 'dir_' and be between 1 and 32 characters long",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/directoriesToggleDirectoryResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Node.js SDK",
            "lang": "javascript",
            "source": "await sc.directory.enableDirectory('\u003corganization_id\u003e', '\u003cdirectory_id\u003e');"
          },
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "directory_response = sc.directory.enable_directory(\n  directory_id='\u003cdirectory_id\u003e', organization_id='\u003corganization_id\u003e'\n)"
          },
          {
            "label": "Go SDK",
            "lang": "go",
            "source": "enable,err := sc.Directory().EnableDirectory(ctx, organizationId, directoryId)"
          },
          {
            "label": "Java SDK",
            "lang": "java",
            "source": "ToggleDirectoryResponse enableResponse = client\n  .directories()\n  .enableDirectory(directoryId, organizationId);"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/clients": {
      "post": {
        "description": "Creates a new M2M client for an organization. This endpoint registers a new client application that can securely access your API on behalf of the organization. The response includes a client ID and secret that should be used for OAuth 2.0 client credentials flow. The plain secret is only returned once during creation and must be stored securely.",
        "tags": ["M2M"],
        "summary": "Create an Organization M2M Client",
        "operationId": "ClientService_CreateOrganizationClient",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "name": "client",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Details of the client to be created",
              "$ref": "#/definitions/clientsOrganizationClient"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "M2M client created successfully. Returns the client ID and plain secret (only available at creation time). The client can be configured with scopes, audience values, and custom claims for fine-grained access control.",
            "schema": {
              "$ref": "#/definitions/clientsCreateOrganizationClientResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/clients/{client_id}": {
      "get": {
        "description": "Retrieves the configuration details for an organization's M2M client. This endpoint returns the client's metadata, including its scopes, audience values, custom claims, and associated secrets. Use this to verify client settings or retrieve the list of active secrets.",
        "tags": ["M2M"],
        "summary": "Get Organization M2M Client",
        "operationId": "ClientService_GetOrganizationClient",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the M2M client",
            "name": "client_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the complete M2M client configuration, including all current settings and a list of active secrets. Note that secret values are not included in the response for security reasons.",
            "schema": {
              "$ref": "#/definitions/clientsGetOrganizationClientResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Permanently deletes an M2M client from an organization. This operation cannot be undone and will revoke all access for the client. All associated secrets will also be invalidated. Use this endpoint to remove unused or compromised clients.",
        "tags": ["M2M"],
        "summary": "Delete an Organization M2M Client",
        "operationId": "ClientService_DeleteOrganizationClient",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization that owns the client. Must start with 'org_' prefix.",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the M2M client to permanently delete. Must start with 'm2morg_' prefix.",
            "name": "client_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Organization M2M client successfully deleted and no longer accessible",
            "schema": {}
          }
        }
      },
      "patch": {
        "description": "Updates the configuration settings for an organization's M2M client. This endpoint allows you to modify client properties such as scopes, audience values, and custom claims. Use this to adjust access permissions or update metadata for the client. Note that client_id and create_time are immutable and cannot be modified.",
        "tags": ["M2M"],
        "summary": "Update Organization M2M client details",
        "operationId": "ClientService_UpdateOrganizationClient",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the client",
            "name": "client_id",
            "in": "path",
            "required": true
          },
          {
            "name": "client",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Updated details for the client",
              "$ref": "#/definitions/clientsOrganizationClient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated organization M2M client with all current details reflected in the response, including modified scopes, audience values, and custom claims.",
            "schema": {
              "$ref": "#/definitions/clientsUpdateOrganizationClientResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/clients/{client_id}/secrets": {
      "post": {
        "description": "Generates a new client secret for an organization's M2M client. This endpoint creates a secure credential that can be used for OAuth 2.0 client credentials flow. The plain secret is only returned once during creation and should be stored securely by the client application. Use this endpoint to rotate secrets or create additional credentials for different environments.",
        "tags": ["M2M"],
        "summary": "Create a Secret for Organization M2M Client",
        "operationId": "ClientService_CreateOrganizationClientSecret",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the client",
            "name": "client_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Client secret created successfully. Returns the new secret ID and the plain secret value (only available at creation time). The secret can be used immediately for authentication.",
            "schema": {
              "$ref": "#/definitions/clientsCreateOrganizationClientSecretResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/clients/{client_id}/secrets/{secret_id}": {
      "delete": {
        "description": "Permanently deletes a client secret for an organization's M2M client. This operation cannot be undone. Use this endpoint to remove compromised or unused secrets. After deletion, the secret can no longer be used for authentication. Consider creating a new secret before deleting the old one to avoid service interruption.",
        "tags": ["M2M"],
        "summary": "Delete an Organization M2M Client Secret",
        "operationId": "ClientService_DeleteOrganizationClientSecret",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the client",
            "name": "client_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the client secret",
            "name": "secret_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Client secret successfully deleted and no longer accessible",
            "schema": {}
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/clients": {
      "post": {
        "description": "Creates a new M2M client for an organization. This endpoint registers a new client application that can securely access your API on behalf of the organization. The response includes a client ID and secret that should be used for OAuth 2.0 client credentials flow. The plain secret is only returned once during creation and must be stored securely.",
        "tags": ["M2M"],
        "summary": "Create an Organization M2M Client",
        "operationId": "ClientService_CreateOrganizationClient",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "name": "client",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Details of the client to be created",
              "$ref": "#/definitions/clientsOrganizationClient"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "M2M client created successfully. Returns the client ID and plain secret (only available at creation time). The client can be configured with scopes, audience values, and custom claims for fine-grained access control.",
            "schema": {
              "$ref": "#/definitions/clientsCreateOrganizationClientResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "from scalekit.v1.clients.clients_pb2 import OrganizationClient\n\nm2m_client = OrganizationClient(\n    name=\"GitHub Actions Deployment Service\",\n    description=\"Service account for GitHub Actions to deploy applications to production\",\n    custom_claims=[\n        {\"key\": \"github_repository\", \"value\": \"acmecorp/inventory-service\"},\n        {\"key\": \"environment\", \"value\": \"production_us\"}\n    ],\n    scopes=[\"deploy:applications\", \"read:deployments\"],\n    audience=[\"deployment-api.acmecorp.com\"],\n    expiry=3600\n)\n\nresponse = sc.m2m_client.create_organization_client(\n    organization_id=\"SCALEKIT_ORGANIZATION_ID\",\n    m2m_client=m2m_client\n)"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/clients/{client_id}": {
      "get": {
        "description": "Retrieves the configuration details for an organization's M2M client. This endpoint returns the client's metadata, including its scopes, audience values, custom claims, and associated secrets. Use this to verify client settings or retrieve the list of active secrets.",
        "tags": ["M2M"],
        "summary": "Get Organization M2M Client",
        "operationId": "ClientService_GetOrganizationClient",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the M2M client",
            "name": "client_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the complete M2M client configuration, including all current settings and a list of active secrets. Note that secret values are not included in the response for security reasons.",
            "schema": {
              "$ref": "#/definitions/clientsGetOrganizationClientResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "# Get client ID from environment variables\norg_id = 'SCALEKIT_ORGANIZATION_ID'\nclient_id = os.environ['M2M_CLIENT_ID']\n\n# Fetch client details for the specified organization\nresponse = sc.m2m_client.get_organization_client(\n    organization_id=org_id,\n    client_id=client_id\n)"
          }
        ]
      },
      "delete": {
        "description": "Permanently deletes an M2M client from an organization. This operation cannot be undone and will revoke all access for the client. All associated secrets will also be invalidated. Use this endpoint to remove unused or compromised clients.",
        "tags": ["M2M"],
        "summary": "Delete an Organization M2M Client",
        "operationId": "ClientService_DeleteOrganizationClient",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization that owns the client. Must start with 'org_' prefix.",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the M2M client to permanently delete. Must start with 'm2morg_' prefix.",
            "name": "client_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Organization M2M client successfully deleted and no longer accessible",
            "schema": {}
          }
        },
        "x-codeSamples": [
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "# Get client ID from environment variables\norg_id = '\u003cSCALEKIT_ORGANIZATION_ID\u003e'\nclient_id = os.environ['M2M_CLIENT_ID']\n\n# Delete the specified client from the organization\nresponse = sc.m2m_client.delete_organization_client(\n    organization_id=org_id,\n    client_id=client_id\n)"
          }
        ]
      },
      "patch": {
        "description": "Updates the configuration settings for an organization's M2M client. This endpoint allows you to modify client properties such as scopes, audience values, and custom claims. Use this to adjust access permissions or update metadata for the client. Note that client_id and create_time are immutable and cannot be modified.",
        "tags": ["M2M"],
        "summary": "Update Organization M2M client details",
        "operationId": "ClientService_UpdateOrganizationClient",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the client",
            "name": "client_id",
            "in": "path",
            "required": true
          },
          {
            "name": "client",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Updated details for the client",
              "$ref": "#/definitions/clientsOrganizationClient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated organization M2M client with all current details reflected in the response, including modified scopes, audience values, and custom claims.",
            "schema": {
              "$ref": "#/definitions/clientsUpdateOrganizationClientResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "from scalekit.v1.clients.clients_pb2 import OrganizationClient\n\norg_id = '\u003cSCALEKIT_ORGANIZATION_ID\u003e'\nclient_id = os.environ['M2M_CLIENT_ID']\n\nupdate_m2m_client = OrganizationClient(\n    description=\"Service account for GitHub Actions to deploy applications to production_eu\",\n    custom_claims=[\n        {\"key\": \"github_repository\", \"value\": \"acmecorp/inventory\"},\n        {\"key\": \"environment\", \"value\": \"production_eu\"}\n    ]\n)\n\nresponse = sc.m2m_client.update_organization_client(\n    organization_id=org_id,\n    client_id=client_id,\n    m2m_client=update_m2m_client\n)"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/clients/{client_id}/secrets": {
      "post": {
        "description": "Generates a new client secret for an organization's M2M client. This endpoint creates a secure credential that can be used for OAuth 2.0 client credentials flow. The plain secret is only returned once during creation and should be stored securely by the client application. Use this endpoint to rotate secrets or create additional credentials for different environments.",
        "tags": ["M2M"],
        "summary": "Create a Secret for Organization M2M Client",
        "operationId": "ClientService_CreateOrganizationClientSecret",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the client",
            "name": "client_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Client secret created successfully. Returns the new secret ID and the plain secret value (only available at creation time). The secret can be used immediately for authentication.",
            "schema": {
              "$ref": "#/definitions/clientsCreateOrganizationClientSecretResponse"
            }
          }
        },
        "x-codeSamples": [
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "# Get client ID from environment variables\norg_id = 'SCALEKIT_ORGANIZATION_ID'\nclient_id = os.environ['M2M_CLIENT_ID']\n\n# Add a new secret to the specified client\nresponse = sc.m2m_client.add_organization_client_secret(\n    organization_id=org_id,\n    client_id=client_id\n)\n\n# Extract the secret ID from the response\nsecret_id = response[0].secret.id"
          }
        ]
      }
    },
    "/api/v1/organizations/{organization_id}/clients/{client_id}/secrets/{secret_id}": {
      "delete": {
        "description": "Permanently deletes a client secret for an organization's M2M client. This operation cannot be undone. Use this endpoint to remove compromised or unused secrets. After deletion, the secret can no longer be used for authentication. Consider creating a new secret before deleting the old one to avoid service interruption.",
        "tags": ["M2M"],
        "summary": "Delete an Organization M2M Client Secret",
        "operationId": "ClientService_DeleteOrganizationClientSecret",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the client",
            "name": "client_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the client secret",
            "name": "secret_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Client secret successfully deleted and no longer accessible",
            "schema": {}
          }
        },
        "x-codeSamples": [
          {
            "label": "Python SDK",
            "lang": "python",
            "source": "# Get client and secret IDs from environment variables\norg_id = '\u003cSCALEKIT_ORGANIZATION_ID\u003e'\nclient_id = os.environ['M2M_CLIENT_ID']\nsecret_id = os.environ['M2M_SECRET_ID']\n\n# Remove the specified secret from the client\nresponse = sc.m2m_client.remove_organization_client_secret(\n    organization_id=org_id,\n    client_id=client_id,\n    secret_id=secret_id\n)"
          }
        ]
      }
    }
  },
  "definitions": {
    "commonsRegionCode": {
      "type": "string",
      "enum": ["US", "EU"]
    },
    "connectionsCodeChallengeType": {
      "type": "string",
      "enum": ["NUMERIC", "ALPHANUMERIC"]
    },
    "connectionsConfigurationType": {
      "type": "string",
      "enum": ["DISCOVERY", "MANUAL"]
    },
    "connectionsConnection": {
      "type": "object",
      "properties": {
        "attribute_mapping": {
          "description": "Maps identity provider attributes to user profile fields. For example, {'email': 'user.mail', 'name': 'user.displayName'}.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configuration_type": {
          "description": "How the connection was configured: DISCOVERY (automatic configuration) or MANUAL (administrator configured)",
          "$ref": "#/definitions/connectionsConfigurationType",
          "example": "MANUAL"
        },
        "debug_enabled": {
          "description": "Enables testing mode that allows non-HTTPS endpoints. Should only be enabled in development environments, never in production.",
          "type": "boolean",
          "example": true
        },
        "enabled": {
          "description": "Controls whether users can sign in using this connection. When false, the connection exists but cannot be used for authentication.",
          "type": "boolean",
          "example": false
        },
        "id": {
          "description": "Unique identifier for this connection. Used in API calls to reference this specific connection.",
          "type": "string",
          "example": "conn_2123312131125533"
        },
        "key_id": {
          "description": "Alternative identifier for this connection, typically used in frontend applications or URLs.",
          "type": "string"
        },
        "oauth_config": {
          "description": "Configuration details for OAuth connections. Present only when type is OAUTH.",
          "$ref": "#/definitions/connectionsOAuthConnectionConfig"
        },
        "oidc_config": {
          "description": "Configuration details for OpenID Connect (OIDC) connections. Present only when type is OIDC.",
          "$ref": "#/definitions/connectionsOIDCConnectionConfig"
        },
        "organization_id": {
          "description": "Identifier of the organization that owns this connection. Connections are typically scoped to a single organization.",
          "type": "string",
          "example": "org_2123312131125533"
        },
        "passwordless_config": {
          "description": "Configuration details for Magic Link authentication. Present only when type is MAGIC_LINK.",
          "$ref": "#/definitions/connectionsPasswordLessConfig"
        },
        "provider": {
          "description": "Identity provider service that handles authentication (such as OKTA, Google, Azure AD, or a custom provider)",
          "$ref": "#/definitions/connectionsConnectionProvider",
          "example": "OKTA"
        },
        "saml_config": {
          "description": "Configuration details for SAML connections. Present only when type is SAML.",
          "$ref": "#/definitions/connectionsSAMLConnectionConfigResponse"
        },
        "status": {
          "description": "Current configuration status of the connection. Possible values include IN_PROGRESS, CONFIGURED, and ERROR.",
          "$ref": "#/definitions/connectionsConnectionStatus",
          "readOnly": true,
          "example": "IN_PROGRESS"
        },
        "test_connection_uri": {
          "description": "URI that can be used to test this connection. Visit this URL to verify the connection works correctly.",
          "type": "string",
          "example": "https://auth.example.com/test-connection/conn_2123312131125533"
        },
        "type": {
          "description": "Authentication protocol used by this connection. Can be OIDC (OpenID Connect), SAML, OAUTH, or MAGIC_LINK.",
          "$ref": "#/definitions/connectionsConnectionType",
          "example": "OIDC"
        }
      }
    },
    "connectionsConnectionProvider": {
      "type": "string",
      "enum": [
        "OKTA",
        "GOOGLE",
        "MICROSOFT_AD",
        "AUTH0",
        "ONELOGIN",
        "PING_IDENTITY",
        "JUMPCLOUD",
        "CUSTOM",
        "GITHUB",
        "GITLAB",
        "LINKEDIN",
        "SALESFORCE",
        "MICROSOFT",
        "IDP_SIMULATOR",
        "SCALEKIT",
        "ADFS"
      ]
    },
    "connectionsConnectionStatus": {
      "type": "string",
      "enum": ["DRAFT", "IN_PROGRESS", "COMPLETED"]
    },
    "connectionsConnectionType": {
      "type": "string",
      "enum": ["OIDC", "SAML", "PASSWORD", "OAUTH", "PASSWORDLESS"]
    },
    "connectionsGetConnectionResponse": {
      "type": "object",
      "properties": {
        "connection": {
          "description": "Complete connection details including provider configuration, protocol settings, status, and all metadata. Contains everything needed to understand the connection's current state.",
          "$ref": "#/definitions/connectionsConnection"
        }
      }
    },
    "connectionsIDPCertificate": {
      "type": "object",
      "properties": {
        "certificate": {
          "description": "IDP Certificate",
          "type": "string"
        },
        "create_time": {
          "description": "Certificate Creation Time",
          "type": "string",
          "format": "date-time",
          "example": "2021-09-01T00:00:00Z"
        },
        "expiry_time": {
          "description": "Certificate Expiry Time",
          "type": "string",
          "format": "date-time",
          "example": "2021-09-01T00:00:00Z"
        },
        "id": {
          "description": "Certificate ID",
          "type": "string",
          "example": "cert_123123123123"
        },
        "issuer": {
          "description": "Certificate Issuer",
          "type": "string",
          "example": "https://youridp.com/service/saml"
        }
      }
    },
    "connectionsListConnection": {
      "type": "object",
      "properties": {
        "OrganizationName": {
          "description": "Name of the organization of the connection",
          "type": "string",
          "example": "Your Organization"
        },
        "domains": {
          "description": "List of domains configured with this connection",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["yourapp.com", "yourworkspace.com"]
        },
        "enabled": {
          "description": "Whether the connection is currently active for organization users",
          "type": "boolean",
          "example": false
        },
        "id": {
          "description": "Unique identifier of the connection",
          "type": "string",
          "example": "conn_2123312131125533"
        },
        "organization_id": {
          "description": "Unique identifier of the organization that owns this connection",
          "type": "string",
          "example": "org_2123312131125533"
        },
        "provider": {
          "description": "Identity provider type (e.g., OKTA, Google, Azure AD)",
          "$ref": "#/definitions/connectionsConnectionProvider",
          "example": "CUSTOM"
        },
        "status": {
          "description": "Current configuration status of the connection",
          "$ref": "#/definitions/connectionsConnectionStatus",
          "readOnly": true,
          "example": "IN_PROGRESS"
        },
        "type": {
          "description": "Authentication protocol used by the connection",
          "$ref": "#/definitions/connectionsConnectionType",
          "example": "OIDC"
        }
      }
    },
    "connectionsListConnectionsResponse": {
      "type": "object",
      "properties": {
        "connections": {
          "description": "List of connections matching the request criteria",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/connectionsListConnection"
          }
        }
      }
    },
    "connectionsNameIdFormat": {
      "type": "string",
      "enum": ["UNSPECIFIED", "EMAIL", "TRANSIENT", "PERSISTENT"]
    },
    "connectionsOAuthConnectionConfig": {
      "type": "object",
      "properties": {
        "authorize_uri": {
          "description": "Authorize URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/authorize"
        },
        "client_id": {
          "description": "Client ID",
          "type": "string",
          "example": "oauth_client_id"
        },
        "client_secret": {
          "description": "Client Secret",
          "type": "string",
          "example": "oauth_client_secret"
        },
        "pkce_enabled": {
          "description": "PKCE Enabled",
          "type": "boolean",
          "example": true
        },
        "prompt": {
          "description": "Prompt for the user",
          "type": "string",
          "example": "none"
        },
        "redirect_uri": {
          "description": "Redirect URI",
          "type": "string",
          "example": "https://yourapp.com/service/oauth/redirect"
        },
        "scopes": {
          "description": "OIDC Scopes",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["openid", "profile"]
        },
        "token_uri": {
          "description": "Token URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/token"
        },
        "use_platform_creds": {
          "description": "Use Scalekit credentials",
          "type": "boolean",
          "example": true
        },
        "user_info_uri": {
          "description": "User Info URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/userinfo"
        }
      }
    },
    "connectionsOIDCConnectionConfig": {
      "type": "object",
      "properties": {
        "authorize_uri": {
          "description": "Authorize URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/authorize"
        },
        "backchannel_logout_redirect_uri": {
          "description": "backchannel logout redirect uri where idp sends logout_token",
          "type": "string",
          "readOnly": true,
          "example": "https://yourapp.com/sso/v1/oidc/conn_1234/backchannel-logout"
        },
        "client_id": {
          "description": "Client ID",
          "type": "string",
          "example": "oauth_client_id"
        },
        "client_secret": {
          "description": "Client Secret",
          "type": "string",
          "example": "oauth_client_secret"
        },
        "discovery_endpoint": {
          "description": "Discovery Endpoint",
          "type": "string",
          "example": "https://youridp.com/service/oauth/.well-known/openid-configuration"
        },
        "idp_logout_required": {
          "description": "Enable IDP logout",
          "type": "boolean",
          "example": true
        },
        "issuer": {
          "description": "Issuer URL",
          "type": "string",
          "example": "https://youridp.com/service/oauth"
        },
        "jwks_uri": {
          "description": "JWKS URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/jwks"
        },
        "pkce_enabled": {
          "description": "PKCE Enabled",
          "type": "boolean",
          "example": true
        },
        "post_logout_redirect_uri": {
          "description": "post logout redirect uri",
          "type": "string",
          "readOnly": true,
          "example": "https://yourapp.com/sso/v1/oidc/conn_1234/logout/callback"
        },
        "redirect_uri": {
          "description": "Redirect URI",
          "type": "string",
          "example": "https://yourapp.com/sso/v1/oidc/conn_1234/callback"
        },
        "scopes": {
          "description": "OIDC Scopes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectionsOIDCScope"
          },
          "example": ["openid", "profile"]
        },
        "token_auth_type": {
          "description": "Token Auth Type",
          "$ref": "#/definitions/connectionsTokenAuthType",
          "example": "URL_PARAMS"
        },
        "token_uri": {
          "description": "Token URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/token"
        },
        "user_info_uri": {
          "description": "User Info URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/userinfo"
        }
      }
    },
    "connectionsOIDCScope": {
      "type": "string",
      "enum": ["openid", "profile", "email", "address", "phone"]
    },
    "connectionsPasswordLessConfig": {
      "type": "object",
      "properties": {
        "code_challenge_length": {
          "description": "Code Challenge Length",
          "type": "integer",
          "format": "int64",
          "example": 6
        },
        "code_challenge_type": {
          "description": "Code Challenge Type",
          "$ref": "#/definitions/connectionsCodeChallengeType",
          "example": "NUMERIC"
        },
        "enforce_same_browser_origin": {
          "description": "Enforce Same Browser Origin",
          "type": "boolean",
          "example": true
        },
        "frequency": {
          "description": "Link Frequency",
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "type": {
          "description": "Passwordless Type",
          "$ref": "#/definitions/connectionsPasswordlessType",
          "example": "LINK"
        },
        "validity": {
          "description": "Link Validity in Seconds",
          "type": "integer",
          "format": "int64",
          "example": "600"
        }
      }
    },
    "connectionsPasswordlessType": {
      "type": "string",
      "enum": ["LINK", "OTP", "LINK_OTP"]
    },
    "connectionsRequestBinding": {
      "type": "string",
      "enum": ["HTTP_POST", "HTTP_REDIRECT"]
    },
    "connectionsSAMLConnectionConfigResponse": {
      "type": "object",
      "properties": {
        "allow_idp_initiated_login": {
          "description": "Allow IDP Initiated Login",
          "type": "boolean",
          "example": true
        },
        "assertion_encrypted": {
          "description": "Assertion Encrypted",
          "type": "boolean",
          "example": true
        },
        "certificate_id": {
          "description": "Certificate ID",
          "type": "string",
          "example": "cer_35585423166144613"
        },
        "default_redirect_uri": {
          "description": "Default Redirect URI",
          "type": "string",
          "example": "https://yourapp.com/service/saml/redirect"
        },
        "force_authn": {
          "description": "Force Authn",
          "type": "boolean",
          "example": true
        },
        "idp_certificates": {
          "description": "IDP Certificates",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/connectionsIDPCertificate"
          }
        },
        "idp_entity_id": {
          "description": "IDP Entity ID",
          "type": "string",
          "example": "https://youridp.com/service/saml"
        },
        "idp_metadata_url": {
          "description": "IDP Metadata URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/metadata"
        },
        "idp_name_id_format": {
          "description": "IDP Name ID Format",
          "$ref": "#/definitions/connectionsNameIdFormat",
          "example": "EMAIL"
        },
        "idp_slo_request_binding": {
          "description": "IDP SLO Request Binding",
          "$ref": "#/definitions/connectionsRequestBinding",
          "example": "HTTP_POST"
        },
        "idp_slo_required": {
          "description": "Enable IDP logout",
          "type": "boolean",
          "example": true
        },
        "idp_slo_url": {
          "description": "IDP SLO URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/slo"
        },
        "idp_sso_request_binding": {
          "description": "IDP SSO Request Binding",
          "$ref": "#/definitions/connectionsRequestBinding",
          "example": "HTTP_POST"
        },
        "idp_sso_url": {
          "description": "IDP SSO URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/sso"
        },
        "saml_signing_option": {
          "description": "SAML Signing Option",
          "$ref": "#/definitions/connectionsSAMLSigningOptions",
          "example": "SAML_ONLY_RESPONSE_SIGNING"
        },
        "sp_assertion_url": {
          "description": "SP Assertion URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/assertion"
        },
        "sp_entity_id": {
          "description": "SP Entity ID",
          "type": "string",
          "example": "https://yourapp.com/service/saml"
        },
        "sp_metadata_url": {
          "description": "SP Metadata URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/metadata"
        },
        "sp_slo_url": {
          "description": "Service Provider SLO url",
          "type": "string",
          "readOnly": true,
          "example": "https://yourapp.com/sso/v1/saml/conn_1234/slo/callback"
        },
        "ui_button_title": {
          "description": "UI Button Title",
          "type": "string",
          "example": "Login with SSO"
        },
        "want_request_signed": {
          "description": "Want Request Signed",
          "type": "boolean",
          "example": true
        }
      }
    },
    "connectionsSAMLSigningOptions": {
      "type": "string",
      "title": "enums all",
      "enum": [
        "NO_SIGNING",
        "SAML_ONLY_RESPONSE_SIGNING",
        "SAML_ONLY_ASSERTION_SIGNING",
        "SAML_RESPONSE_ASSERTION_SIGNING",
        "SAML_RESPONSE_OR_ASSERTION_SIGNING"
      ]
    },
    "connectionsToggleConnectionResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Current state of the connection after the operation. True means the connection is now enabled and can be used for authentication.",
          "type": "boolean",
          "example": true
        },
        "error_message": {
          "description": "Error message if the operation fails",
          "type": "string",
          "example": "placeholder"
        }
      }
    },
    "connectionsTokenAuthType": {
      "type": "string",
      "enum": ["URL_PARAMS", "BASIC_AUTH"]
    },
    "directoriesAttributeMapping": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "map_to": {
          "type": "string"
        }
      }
    },
    "directoriesAttributeMappings": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesAttributeMapping"
          }
        }
      }
    },
    "directoriesDirectory": {
      "type": "object",
      "properties": {
        "attribute_mappings": {
          "description": "Mappings between directory attributes and Scalekit user and group attributes",
          "$ref": "#/definitions/directoriesAttributeMappings"
        },
        "directory_endpoint": {
          "description": "The endpoint URL generated by Scalekit for synchronizing users and groups from the Directory Provider",
          "type": "string",
          "example": "https://yourapp.scalekit.com/api/v1/directoies/dir_123212312/scim/v2"
        },
        "directory_provider": {
          "description": "Identity provider connected to this directory",
          "$ref": "#/definitions/directoriesDirectoryProvider",
          "example": "OKTA"
        },
        "directory_type": {
          "description": "Type of the directory, indicating the protocol or standard used for synchronization",
          "$ref": "#/definitions/directoriesDirectoryType",
          "example": "SCIM"
        },
        "email": {
          "description": "Email Id associated with Directory whose access will be used for polling",
          "type": "string",
          "example": "john.doe@scalekit.cloud"
        },
        "enabled": {
          "description": "Indicates whether the directory is currently enabled and actively synchronizing users and groups",
          "type": "boolean",
          "example": true
        },
        "groups_tracked": {
          "description": "It indicates if all groups are tracked or select groups are tracked",
          "type": "string",
          "example": "ALL"
        },
        "id": {
          "description": "Unique identifier of the directory",
          "type": "string",
          "example": "dir_121312434123312"
        },
        "last_synced_at": {
          "description": "Timestamp of the last successful synchronization of users and groups from the Directory Provider",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "name": {
          "description": "Name of the directory, typically representing the connected Directory provider",
          "type": "string",
          "example": "Azure AD"
        },
        "organization_id": {
          "description": "Unique identifier of the organization to which the directory belongs",
          "type": "string",
          "example": "org_121312434123312"
        },
        "role_assignments": {
          "description": "Role assignments associated with the directory, defining group based role assignments",
          "$ref": "#/definitions/directoriesRoleAssignments"
        },
        "secrets": {
          "description": "List of secrets used for authenticating and synchronizing with the Directory Provider",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesSecret"
          }
        },
        "stats": {
          "description": "Statistics and metrics related to the directory, such as synchronization status and error counts",
          "$ref": "#/definitions/directoriesStats"
        },
        "status": {
          "description": "Directory Status",
          "type": "string",
          "example": "IN_PROGRESS"
        },
        "total_groups": {
          "description": "Total number of groups in the directory",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "total_users": {
          "description": "Total number of users in the directory",
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      }
    },
    "directoriesDirectoryGroup": {
      "type": "object",
      "properties": {
        "display_name": {
          "description": "Display Name",
          "type": "string",
          "example": "Admins"
        },
        "group_detail": {
          "description": "Complete Group Details Payload",
          "type": "object"
        },
        "id": {
          "description": "Group ID",
          "type": "string",
          "example": "dirgroup_121312434123312"
        },
        "total_users": {
          "description": "Total Users in the Group",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "updated_at": {
          "description": "Updated At",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        }
      }
    },
    "directoriesDirectoryProvider": {
      "type": "string",
      "enum": [
        "OKTA",
        "GOOGLE",
        "MICROSOFT_AD",
        "AUTH0",
        "ONELOGIN",
        "JUMPCLOUD",
        "PING_IDENTITY"
      ]
    },
    "directoriesDirectoryType": {
      "type": "string",
      "enum": ["SCIM", "LDAP", "POLL"]
    },
    "directoriesDirectoryUser": {
      "type": "object",
      "properties": {
        "email": {
          "description": "Email",
          "type": "string",
          "example": "johndoe"
        },
        "emails": {
          "description": "Emails",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "family_name": {
          "description": "Last Name",
          "type": "string",
          "example": "Doe"
        },
        "given_name": {
          "description": "First Name",
          "type": "string",
          "example": "John"
        },
        "groups": {
          "description": "Groups",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesDirectoryGroup"
          }
        },
        "id": {
          "description": "User ID",
          "type": "string",
          "example": "diruser_121312434123312"
        },
        "preferred_username": {
          "description": "Preferred Username",
          "type": "string",
          "example": "johndoe"
        },
        "updated_at": {
          "description": "Updated At",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "user_detail": {
          "description": "Complete User Details Payload",
          "type": "object"
        }
      }
    },
    "directoriesGetDirectoryResponse": {
      "type": "object",
      "properties": {
        "directory": {
          "description": "Detailed information about the requested directory",
          "$ref": "#/definitions/directoriesDirectory"
        }
      }
    },
    "directoriesListDirectoriesResponse": {
      "type": "object",
      "properties": {
        "directories": {
          "description": "List of directories associated with the organization",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesDirectory"
          }
        }
      }
    },
    "directoriesListDirectoryGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "description": "List of directory groups retrieved from the specified directory",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesDirectoryGroup"
          }
        },
        "next_page_token": {
          "description": "Token to retrieve the next page of results. Use this token in the 'page_token' field of the next request",
          "type": "string"
        },
        "prev_page_token": {
          "description": "Token to retrieve the previous page of results. Use this token in the 'page_token' field of the next request",
          "type": "string"
        },
        "total_size": {
          "description": "Total number of groups matching the request criteria, regardless of pagination",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "directoriesListDirectoryUsersResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "description": "Token for pagination. Use this token in the 'page_token' field of the next request to fetch the subsequent page of users",
          "type": "string"
        },
        "prev_page_token": {
          "description": "Token for pagination. Use this token in the 'page_token' field of the next request to fetch the prior page of users",
          "type": "string"
        },
        "total_size": {
          "description": "Total number of users available in the directory that match the request criteria",
          "type": "integer",
          "format": "int64"
        },
        "users": {
          "description": "List of directory users retrieved from the specified directory",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesDirectoryUser"
          }
        }
      }
    },
    "directoriesRoleAssignment": {
      "type": "object",
      "properties": {
        "group_id": {
          "description": "group ID for the role mapping",
          "type": "string",
          "example": "dirgroup_121312434123"
        },
        "role_name": {
          "type": "string"
        }
      }
    },
    "directoriesRoleAssignments": {
      "type": "object",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesRoleAssignment"
          }
        }
      }
    },
    "directoriesSecret": {
      "type": "object",
      "properties": {
        "create_time": {
          "description": "Creation Time",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "directory_id": {
          "description": "Directory ID",
          "type": "string",
          "example": "dir_12362474900684814"
        },
        "expire_time": {
          "description": "Expiry Time",
          "type": "string",
          "format": "date-time",
          "example": "2025-10-01T00:00:00Z"
        },
        "id": {
          "type": "string"
        },
        "last_used_time": {
          "description": "Last Used Time",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "secret_suffix": {
          "description": "Secret Suffix",
          "type": "string",
          "example": "Nzg5"
        },
        "status": {
          "description": "Secret Status",
          "$ref": "#/definitions/directoriesSecretStatus",
          "example": "ACTIVE"
        }
      }
    },
    "directoriesSecretStatus": {
      "type": "string",
      "enum": ["INACTIVE"]
    },
    "directoriesStats": {
      "type": "object",
      "properties": {
        "group_updated_at": {
          "description": "Max time of Group Updated At for Directory",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "total_groups": {
          "description": "Total Groups in the Directory",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "total_users": {
          "description": "Total Users in the Directory",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "user_updated_at": {
          "description": "Max time of User Updated At for Directory",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        }
      }
    },
    "directoriesToggleDirectoryResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Specifies the directory's state after the toggle operation. A value of `true` indicates that the directory is enabled and actively synchronizing users and groups. A value of `false` means the directory is disabled, halting synchronization",
          "type": "boolean",
          "example": true
        },
        "error_message": {
          "description": "Contains a human-readable error message if the toggle operation encountered an issue. If the operation was successful, this field will be empty",
          "type": "string",
          "example": "The directory is already enabled"
        }
      }
    },
    "organizationsCreateOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "description": "The newly created organization containing its ID, settings, and metadata",
          "$ref": "#/definitions/organizationsOrganization"
        }
      }
    },
    "organizationsFeature": {
      "description": "- dir_sync: dir_sync enables directory synchronization configuration in the portal\n - sso: sso enables Single Sign-On (SSO) configuration in the portal",
      "type": "string",
      "title": "Feature represents the available features that can be enabled for an organization's portal link",
      "enum": ["dir_sync", "sso"]
    },
    "organizationsGeneratePortalLinkResponse": {
      "type": "object",
      "properties": {
        "link": {
          "description": "Contains the generated admin portal link details. The link URL can be shared with organization administrators to set up: Single Sign-On (SSO) authentication and directory synchronization",
          "$ref": "#/definitions/organizationsLink"
        }
      }
    },
    "organizationsGetOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "description": "The newly created organization",
          "$ref": "#/definitions/organizationsOrganization"
        }
      }
    },
    "organizationsLink": {
      "type": "object",
      "properties": {
        "expire_time": {
          "description": "Expiry time of the link. The link is valid for 1 week.",
          "type": "string",
          "format": "date-time",
          "example": "2024-02-06T14:48:00.000Z"
        },
        "id": {
          "description": "Unique Identifier for the link",
          "type": "string",
          "example": "lnk_123123123123123"
        },
        "location": {
          "description": "Location of the link. This is the URL that can be used to access the Admin portal. The link is valid for 1 week.",
          "type": "string",
          "example": "https://scalekit.com/portal/lnk_123123123123123"
        }
      }
    },
    "organizationsListOrganizationsResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "description": "Pagination token for the next page of results. Use this token to fetch the next page.",
          "type": "string",
          "example": "\u003cnext_page_token\u003e"
        },
        "organizations": {
          "description": "List of organization objects",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/organizationsOrganization"
          }
        },
        "prev_page_token": {
          "description": "Pagination token for the previous page of results. Use this token to fetch the previous page.",
          "type": "string",
          "example": "\u003cprev_page_token\u003e"
        },
        "total_size": {
          "description": "Total number of organizations in the environment.",
          "type": "integer",
          "format": "int64",
          "example": 30
        }
      }
    },
    "organizationsOrganization": {
      "type": "object",
      "required": ["create_time"],
      "properties": {
        "create_time": {
          "description": "Timestamp when the organization was created",
          "type": "string",
          "format": "date-time",
          "title": "Created Time",
          "example": "2025-02-15T06:23:44.560Z"
        },
        "display_name": {
          "description": "Name of the organization. Must be between 1 and 200 characters",
          "type": "string",
          "title": "Name of the org to be used in display",
          "example": "Megasoft"
        },
        "external_id": {
          "description": "Your application's unique identifier for this organization, used to link Scalekit with your system.",
          "type": "string",
          "title": "External Id is useful to store a unique identifier for a given Org that. The unique Identifier can be the id of your tenant / org in your SaaSApp",
          "example": "my_unique_id"
        },
        "id": {
          "description": "Unique scalekit-generated identifier that uniquely references an organization",
          "type": "string",
          "title": "Id",
          "example": "org_59615193906282635"
        },
        "metadata": {
          "description": "Key value pairs extension attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "region_code": {
          "description": "Geographic region code for the organization. Currently limited to US.",
          "title": "Optional regioncode",
          "$ref": "#/definitions/commonsRegionCode",
          "example": "US"
        },
        "settings": {
          "title": "Organization Settings",
          "$ref": "#/definitions/organizationsOrganizationSettings"
        },
        "update_time": {
          "description": "Timestamp when the organization was last updated",
          "type": "string",
          "format": "date-time",
          "title": "Updated time",
          "example": "2025-02-15T06:23:44.560Z"
        }
      }
    },
    "organizationsOrganizationSettings": {
      "description": "Configuration options that control organization-level features and capabilities",
      "type": "object",
      "title": "Organization Settings",
      "properties": {
        "features": {
          "description": "List of feature toggles that control organization capabilities such as SSO authentication and directory synchronization",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/organizationsOrganizationSettingsFeature"
          },
          "example": [
            {
              "enabled": true,
              "name": "sso"
            },
            {
              "enabled": false,
              "name": "directory_sync"
            }
          ]
        }
      },
      "example": {
        "features": [
          {
            "enabled": true,
            "name": "sso"
          },
          {
            "enabled": false,
            "name": "directory_sync"
          }
        ]
      }
    },
    "organizationsOrganizationSettingsFeature": {
      "description": "Controls the activation state of a specific organization feature",
      "type": "object",
      "title": "Organization Feature Toggle",
      "required": ["name", "enabled"],
      "properties": {
        "enabled": {
          "description": "Whether the feature is enabled (true) or disabled (false) for this organization",
          "type": "boolean",
          "example": true
        },
        "name": {
          "description": "Feature identifier. Supported values include: \"sso\" (Single Sign-On), \"directory_sync\" (Directory Synchronization)",
          "type": "string",
          "example": "sso"
        }
      }
    },
    "organizationsUpdateOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "description": "Updated organization details",
          "$ref": "#/definitions/organizationsOrganization"
        }
      }
    },
    "protobufNullValue": {
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.",
      "type": "string"
    },
    "v1organizationsCreateOrganization": {
      "type": "object",
      "properties": {
        "display_name": {
          "description": "Name of the organization. Must be between 1 and 200 characters.",
          "type": "string",
          "example": "Megasoft Inc"
        },
        "external_id": {
          "description": "Your application's unique identifier for this organization, used to link Scalekit with your system.",
          "type": "string",
          "example": "my_unique_id"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1organizationsUpdateOrganization": {
      "description": "For update messages ensure the indexes are same as the base model itself.",
      "type": "object",
      "properties": {
        "display_name": {
          "description": "Name of the organization to display in the UI. Must be between 1 and 200 characters",
          "type": "string",
          "example": "Acme Corporation"
        },
        "external_id": {
          "description": "Your application's unique identifier for this organization, used to link Scalekit with your system",
          "type": "string",
          "example": "tenant_12345"
        },
        "metadata": {
          "description": "Custom key-value pairs to store with the organization. Keys must be 3-25 characters, values must be 1-256 characters. Maximum 10 pairs allowed.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "industry": "technology"
          }
        }
      }
    }
  },
  "tags": [
    {
      "description": "Organization represents a customer or a tenant of your product. This is the top level entity and all resources are mapped to this Organization object. Each organization is uniquely identified by `organization_id`.\n\n\u003c!-- ## Organization Attributes\n\n| Attribute Name             | Attribute Description                                                                                                                        |\n| -------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| `id`\u003cbr\u003e_string_           | Unique ID of an Organization. Required for all API operations against this organization.                                                     |\n| `display_name`\u003cbr\u003e_string_ | Name of the Organization                                                                                                                     |\n| `create_time`\u003cbr\u003e_string_  | Creation timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.\u003cbr\u003eExample: `2011-10-05T14:48:00.000Z`                      |\n| `update_time`\u003cbr\u003e_string_  | Last update timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.\u003cbr\u003eExample: `2021-10-05T14:48:00.000Z`                   |\n| `external_id`\u003cbr\u003e_string_  | Your system's unique ID for this organization. You can use this to fetch Organization and Connection details without storing Scalekit's IDs. |\n| `metadata`\u003cbr\u003e_object_     | Additional organization information stored as JSON.\u003cbr\u003eExample: `{\"key\":\"value\"}`                                                            |\n| `region_code`\u003cbr\u003e_string_  | Data center region where organization data is stored. Currently always returns `US`.                                                         | --\u003e\n",
      "name": "Organizations"
    },
    {
      "description": "The Directory API lets you connect external identity providers to your organizations. Use these endpoints to view users and groups, enable or disable directory connections, and configure access settings. Supports identity systems like Okta, Microsoft Entra ID, and Google Workspace through standard protocols.",
      "name": "Directory"
    },
    {
      "description": " Connection represents a unique Single Sign-on instance for an Organization. Connection has the configuration needed to establish an SSO and exchange user information securely between Scalekit and your customer's Identity Provider. Depending on the connection type parameter, the corresponding configuration details are found in `oidc_config` or `saml_config` parameter.\n\u003c!--\n**Connection Attributes**\n\n| Attribute Name | Attribute Description |\n|---|---|\n| `id`\u003cbr\u003e_string_ | Unique ID of an SSO Connection. This attribute is required for all API operations to be performed against this connection.  |\n| `provider`\u003cbr\u003e_ENUM_ | Name of the Identity Provider. Possible Values are: `OKTA`, `GOOGLE`, `MICROSOFT_AD`, `AUTH0`, `ONELOGIN`, `PING_IDENTITY`, `JUMPCLOUD`, `CUSTOM` |\n| `type`\u003cbr\u003e_ENUM_ | Protocol type that is used for this connection. Possible values are `SAML` or `OIDC` |\n| `status`\u003cbr\u003e_ENUM_ | Indicates the configuration progress status of the SSO Connection. Possible Values are `DRAFT`, `INPROGRESS`, `COMPLETED`. \u003cbr\u003e_Note_: This doesn't indicate whether this connection is active or not. |\n| `enabled`\u003cbr\u003e_boolean_ | Indicates whether this connection is active or not. Users can only login via active SSO connections. |\n| `organization_id`\u003cbr\u003e_string_ | Organization ID to which this SSO connection belongs to. |\n| `saml_config`\u003cbr\u003e_Object_ | If this connection is of type `SAML`, the configuration details are found in this object. |\n| `oidc_config`\u003cbr\u003e_Object_ | If this connection is of type `OIDC`, the configuration details are found in this object. |\n| `attribute_mapping`\u003cbr\u003e_Object_ | Array of attribute mappings using which the user information received from the Identity Provider is normalized. Example: \u003ccode\u003e \u003cbr/\u003e{ \u003cbr/\u003e\u0026nbsp;\u0026nbsp; \"email\": \"email\",\u003cbr/\u003e\u0026nbsp;\u0026nbsp; \"family_name\": \"lastName\", \u003cbr/\u003e\u0026nbsp;\u0026nbsp; \"given_name\": \"firstName\",\u003cbr/\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\"sub\": \"nameid\" \u003cbr/\u003e} \u003c/code\u003e |\n| `create_time` | Timestamp at which this connection record was created in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. For Example: `2021-10-05T14:48:00.000Z` |\n| `update_time`\u003cbr\u003e_string_ | Timestamp at which this connection record was last updated in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. For Example: `2021-10-10T14:48:00.000Z` | --\u003e\n",
      "name": "Connections"
    }
  ],
  "externalDocs": {
    "description": "Scalekit Docs",
    "url": "https://docs.scalekit.com/"
  }
}
